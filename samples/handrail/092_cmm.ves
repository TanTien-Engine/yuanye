var node0 = ::geograph::nodes::draw_geometry::DrawGeometry()
node0.query_param("skip").value = false

_editor.add_node(node0, 242.24379655369, 193.96571204874)

var node1 = ::blueprint::nodes::camera2d::Camera2d()

node1.x = 303.9143458302
node1.y = 129.83985326822
node1.scale = 1.331
node1.speed = 0.01

_editor.add_node(node1, 77.119734703367, 107.45501094005)

var node2 = ::lattice::nodes::canvas::Canvas()
node2.query_param("type").value = "quad"
node2.query_param("size").value.set(12, 12)
node2.query_param("unit").value = 15

node2.conn_segs = [ ::maths::vector::Vector3(3, 1, 0), ::maths::vector::Vector3(3, 1, 0), ::maths::vector::Vector3(6, 2, 0), ::maths::vector::Vector3(4, -0, 0), ::maths::vector::Vector3(2, 6, 0), ::maths::vector::Vector3(0, 4, 0), ::maths::vector::Vector3(2, 6, 0), ::maths::vector::Vector3(6, 2, 0), ::maths::vector::Vector3(5, 7, 0), ::maths::vector::Vector3(3, 5, 0), ::maths::vector::Vector3(7, 5, 0), ::maths::vector::Vector3(5, 3, 0), ::maths::vector::Vector3(0, 8, 0), ::maths::vector::Vector3(4, 12, 0), ::maths::vector::Vector3(8, 0, 0), ::maths::vector::Vector3(12, 4, 0), ::maths::vector::Vector3(7, 5, 0), ::maths::vector::Vector3(10, 2, 0), ::maths::vector::Vector3(2, 10, 0), ::maths::vector::Vector3(5, 7, 0), ::maths::vector::Vector3(4, 4, 0), ::maths::vector::Vector3(-0, 0, 0) ]

_editor.add_node(node2, -196.98301345537, 173.5)

var node3 = ::blueprint::nodes::subgraph::Subgraph()
node3.load_from_file(_editor, "../../assets/blueprints/wallpaper_groups/cmm.ves")

_editor.add_node(node3, 50.3205, 215.3226)

var node4 = ::blueprint::nodes::number2::Number2()

node4.value.set(1, 1)

_editor.add_node(node4, -191.9942, -49.8375)

var node5 = ::blueprint::nodes::number2::Number2()

node5.value.set(3, 3)

_editor.add_node(node5, -192.66988037109, 53.332079467773)

Blueprint.connect(node2, "geo", node3, "geo")
Blueprint.connect(node2, "size", node3, "size")
Blueprint.connect(node5, "v2", node3, "grids")
Blueprint.connect(node4, "v2", node3, "offset")
Blueprint.connect(node3, "geo", node0, "geos")
Blueprint.connect(node1, "mat", node0, "cam_mat")
