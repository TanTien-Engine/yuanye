var node0 = ::lattice::nodes::draw_handrail::DrawHandrail()

_editor.add_node(node0, 352.82843291733, 35.815984776013)

var node1 = ::blueprint::nodes::camera2d::Camera2d()

node1.x = 445.90667619227
node1.y = 296.49346335198
node1.scale = 1.61051
node1.speed = 0.15367764234543

_editor.add_node(node1, -332.54987191193, -107.12765603613)

var node2 = ::lattice::nodes::canvas::Canvas()
node2.query_param("type").value = "tri6"
node2.query_param("size").value.set(20, 20)
node2.query_param("unit").value = 8

node2.conn_segs = [ ::maths::vector::Vector3(16, 8, 0), ::maths::vector::Vector3(16, 8, 0), ::maths::vector::Vector3(8, 13, 0), ::maths::vector::Vector3(8, 13, 0), ::maths::vector::Vector3(0, -0, 0), ::maths::vector::Vector3(20, 0, 0), ::maths::vector::Vector3(12, 5, 0), ::maths::vector::Vector3(12, 5, 0), ::maths::vector::Vector3(7, 8, 0.5), ::maths::vector::Vector3(12, 14, 0.5), ::maths::vector::Vector3(10, 13, 0.5), ::maths::vector::Vector3(8, 14, 0.5), ::maths::vector::Vector3(7, 8, 0.5), ::maths::vector::Vector3(-0, 0, 0.5) ]

_editor.add_node(node2, -184.36627272727, 52.55572727273)

var node3 = ::blueprint::nodes::split::Split()

_editor.add_node(node3, -32.55622036306, -65.071250649696)

var node4 = ::blueprint::nodes::subgraph::Subgraph()
node4.load_from_file(_editor, "../../assets/blueprints/wallpaper_groups/p6.ves")

_editor.add_node(node4, 161, 84)

var node5 = ::blueprint::nodes::number2::Number2()

node5.value.set(7, 3)

_editor.add_node(node5, -40.75486745053, 44.928191748891)

var node6 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node6, -326.62, 90.695)

var node7 = ::blueprint::nodes::translate::Translate()

node7.dx = 0
node7.dy = 554.1
node7.dz = 0

_editor.add_node(node7, -453.62, 40.695)

Blueprint.connect(node1, "mat", node6, "a")
Blueprint.connect(node7, "mat", node6, "b")
Blueprint.connect(node6, "v", node2, "cam_mat")
Blueprint.connect(node2, "size", node3, "xy")
Blueprint.connect(node2, "geo", node4, "geo")
Blueprint.connect(node5, "v2", node4, "grids")
Blueprint.connect(node3, "x", node4, "size")
Blueprint.connect(node4, "geo", node0, "geos")
Blueprint.connect(node1, "mat", node0, "cam_mat")
