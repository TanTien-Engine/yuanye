var node0 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node0, -208.01154951616, 256.49209872159)

var node1 = ::blueprint::nodes::input::Input()

node1.var_name = "geo"
node1.var_type = "geo"

_editor.add_node(node1, -879.18544887941, 319.16402806585)

var node2 = ::blueprint::nodes::output::Output()

node2.var_name = "geo"
node2.var_type = "array"

_editor.add_node(node2, 485.28058932217, 274.67670110973)

var node3 = ::lattice::nodes::crystal_system::Square()
node3.query_param("size").value = 450

_editor.add_node(node3, 341.10884434228, 250.95389563317)

var node4 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node4, 197.39791176536, 251.07453779741)

var node5 = ::lattice::nodes::reflect::Reflect()
node5.query_param("pos").value.set(-157.19459053343, -60.203606311044)
node5.query_param("dir").value.set(23.319308790383, 25.109691960935)

_editor.add_node(node5, -734.5543507707, 229.69842069897)

var node6 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node6, -592.062819729, 308.29887590759)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "../categories/rotate90.ves")

_editor.add_node(node7, -391.6616044478, 200.39436617765)

var node8 = ::blueprint::nodes::subgraph::Subgraph()
node8.load_from_file(_editor, "../categories/rotate180.ves")

_editor.add_node(node8, -7.3035195090553, 188.77471507679)

var node9 = ::blueprint::nodes::input::Input()

node9.var_name = "size"
node9.var_type = "num2"

_editor.add_node(node9, 197.96771240234, 173.93496704102)

Blueprint.connect(node1, "var", node5, "geo")
Blueprint.connect(node1, "var", node6, "in0")
Blueprint.connect(node5, "geo", node6, "in1")
Blueprint.connect(node6, "list", node7, "geo")
Blueprint.connect(node6, "list", node0, "in0")
Blueprint.connect(node7, "geo", node0, "in1")
Blueprint.connect(node0, "list", node8, "geo")
Blueprint.connect(node0, "list", node4, "in0")
Blueprint.connect(node8, "geo", node4, "in1")
Blueprint.connect(node4, "list", node3, "geo")
Blueprint.connect(node9, "var", node3, "size")
Blueprint.connect(node3, "geo", node2, "var")
