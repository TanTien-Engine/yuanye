var node0 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node0, -207.73882224343, 362.03755326705)

var node1 = ::blueprint::nodes::input::Input()

node1.var_name = "geo"
node1.var_type = "geo"

_editor.add_node(node1, -869.18544887941, 371.89130079312)

var node2 = ::blueprint::nodes::output::Output()

node2.var_name = "geo"
node2.var_type = "array"

_editor.add_node(node2, 1086.7710988481, 284.09722248989)

var node3 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node3, 169.30218449263, 357.39371961559)

var node4 = ::lattice::nodes::reflect::Reflect()
node4.query_param("pos").value.set(0, 0)
node4.query_param("dir").value.set(-1, 1)

_editor.add_node(node4, -714.71212687889, 248.63155368169)

var node5 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node5, -577.51736518355, 360.11705772577)

var node6 = ::blueprint::nodes::subgraph::Subgraph()
node6.load_from_file(_editor, "../categories/rotate90.ves")

_editor.add_node(node6, -388.96979314631, 296.73046736284)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "../categories/rotate180.ves")

_editor.add_node(node7, -21.739, 305.524)

var node8 = ::blueprint::nodes::input::Input()

node8.var_name = "size"
node8.var_type = "num2"

_editor.add_node(node8, 25.466084303168, 219.77011580135)

var node9 = ::blueprint::nodes::input::Input()

node9.var_name = "grids"
node9.var_type = "num2"

_editor.add_node(node9, 170.5810968068, 153.71919666637)

var node10 = ::lattice::nodes::crystal_system::Rhombic()
node10.query_param("size").value.set(173, 100)

_editor.add_node(node10, 312.30456442085, 254.15209456514)

var node11 = ::blueprint::nodes::property::Property()

node11.var_name = "offset"
node11.var_type = "num"

_editor.add_node(node11, 28.902012709943, 154.00591738362)

var node12 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node12, 170.13564767128, 220.9679373749)

var node13 = ::blueprint::nodes::subgraph::Subgraph()
node13.load_from_file(_editor, "../tools/handrail_frame.ves")
node13.set_prop_value("offset_x", false)
node13.set_prop_value("offset_y", false)

_editor.add_node(node13, 755.35022310712, 156.86664511184)

var node14 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node14, 945.69657661467, 258.78253581401)

var node15 = ::blueprint::nodes::split::Split()

_editor.add_node(node15, 237.63766417586, -7.0734205697394)

var node16 = ::blueprint::nodes::add::Add()

_editor.add_node(node16, 371.63766417586, 4.9265489126843)

var node17 = ::blueprint::nodes::subtract::Subtract()

_editor.add_node(node17, 374.63766417586, -80.073451087316)

var node18 = ::blueprint::nodes::number::Number()

node18.value = 0.5

_editor.add_node(node18, 242.63766417586, -107.07345108732)

var node19 = ::blueprint::nodes::combine::Combine()

_editor.add_node(node19, 528.63766417586, -65.073451087318)

var node20 = ::blueprint::nodes::subgraph::Subgraph()
node20.load_from_file(_editor, "../../../../tantien/assets/blueprints/tools/half.ves")

_editor.add_node(node20, 363.59880814527, 123.54646990265)

Blueprint.connect(node9, "var", node20, "val")
Blueprint.connect(node20, "val", node15, "xy")
Blueprint.connect(node15, "y", node17, "a")
Blueprint.connect(node18, "v", node17, "b")
Blueprint.connect(node15, "x", node16, "a")
Blueprint.connect(node18, "v", node16, "b")
Blueprint.connect(node16, "v", node19, "x")
Blueprint.connect(node17, "v", node19, "y")
Blueprint.connect(node8, "var", node12, "a")
Blueprint.connect(node11, "var", node12, "b")
Blueprint.connect(node12, "v", node13, "size")
Blueprint.connect(node19, "xy", node13, "grids")
Blueprint.connect(node1, "var", node4, "geo")
Blueprint.connect(node1, "var", node5, "in0")
Blueprint.connect(node4, "geo", node5, "in1")
Blueprint.connect(node5, "list", node6, "geo")
Blueprint.connect(node5, "list", node0, "in0")
Blueprint.connect(node6, "geo", node0, "in1")
Blueprint.connect(node0, "list", node7, "geo")
Blueprint.connect(node0, "list", node3, "in0")
Blueprint.connect(node7, "geo", node3, "in1")
Blueprint.connect(node3, "list", node10, "geo")
Blueprint.connect(node12, "v", node10, "size")
Blueprint.connect(node9, "var", node10, "grids")
Blueprint.connect(node10, "geo", node14, "in0")
Blueprint.connect(node13, "geo", node14, "in1")
Blueprint.connect(node14, "list", node2, "var")
