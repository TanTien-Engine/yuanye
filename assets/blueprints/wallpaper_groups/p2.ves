var node0 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node0, -207.73882224343, 263.85573508523)

var node1 = ::blueprint::nodes::input::Input()

node1.var_name = "geo"
node1.var_type = "geo"

_editor.add_node(node1, -427.49499057738, 276.99136226433)

var node2 = ::blueprint::nodes::output::Output()

node2.var_name = "geo"
node2.var_type = "array"

_editor.add_node(node2, 86.47195295854, 289.22272838246)

var node3 = ::lattice::nodes::crystal_system::Oblique()
node3.query_param("size").value.set(200, 250)
node3.query_param("angle").value = 1.0471975511966

_editor.add_node(node3, -64, 235.5)

var node4 = ::blueprint::nodes::subgraph::Subgraph()
node4.load_from_file(_editor, "../categories/rotate_with_angle.ves")

_editor.add_node(node4, -397.16179727487, 135.62272087823)

var node5 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node5, -593.62373439074, 168.59817558952)

var node6 = ::blueprint::nodes::input::Input()

node6.var_name = "size"
node6.var_type = "num2"

_editor.add_node(node6, -208, 186.5)

Blueprint.connect(node1, "var", node4, "geo")
Blueprint.connect(node5, "pi", node4, "angle")
Blueprint.connect(node1, "var", node0, "in0")
Blueprint.connect(node4, "geo", node0, "in1")
Blueprint.connect(node0, "list", node3, "geo")
Blueprint.connect(node6, "var", node3, "size")
Blueprint.connect(node3, "geo", node2, "var")
